#This file contains all the effects for the Royal Fairy Challenge
#Effects here might come handy for similar events in the future

th_rfc_initiate_challenge = {
	custom_tooltip = th_rfc_initiate_challenge_tt
	hidden_effect = {
		set_global_flag = th_royal_fairy_challenge_happened_once
		set_global_flag = th_royal_fairy_challenge_has_begun
		set_country_flag = th_participates_royal_fairy_challenge
		set_country_flag = th_rfc_has_variables_set
		set_country_flag = th_rfc_start_cooldown
		clr_global_flag = th_royal_fairy_challenge_is_about_to_happen
		set_variable = {
			which = th_royal_fairy_challenge_points
			value = 0
		}
		set_variable = {
			which = th_rfc_own_high_score
			value = 0
		}
		#Variable for checking of how long RFC is going
		set_variable = {
			which = th_rfc_current_cycle_of_challenge
			value = 0
		}
		#Sending invites to the other fairies
		every_country = {
			limit = {
				primary_culture = Fairy
				is_colonial_nation = no
				is_client_nation = no
				NOT = { tag = ROOT }
			}
			country_event = {
				id = rfc_events.1
			}
		}
		#Explaning event of what is going on
		country_event = {
			id = rfc_events.2
		}
	}
}

th_rfc_select_the_bakas = {
	random_country = {
		limit = {
			capital_scope = {
				continent = gensokyo_continent
			}
			NOT = { has_country_flag = th_participates_royal_fairy_challenge }
		}
		set_country_flag = th_rfc_baka_for_diplomacy_of_@ROOT
	}
	random_country = {
		limit = {
			capital_scope = {
				continent = gensokyo_continent
			}
			NOT = { has_country_flag = th_participates_royal_fairy_challenge }
			NOT = { has_country_flag = th_rfc_baka_for_diplomacy_of_@ROOT }
		}
		set_country_flag = th_rfc_baka_for_warfare_of_@ROOT
		reverse_add_casus_belli = {
			type = cb_touhou_baka_war
			target = ROOT
		}
	}
	random_country = {
		limit = {
			capital_scope = {
				continent = gensokyo_continent
			}
			NOT = { has_country_flag = th_participates_royal_fairy_challenge }
			NOT = { has_country_flag = th_rfc_baka_for_diplomacy_of_@ROOT }
			NOT = { has_country_flag = th_rfc_baka_for_warfare_of_@ROOT }
		}
		set_country_flag = th_rfc_baka_for_royalty_of_@ROOT
	}
	random_country = {
		limit = {
			capital_scope = {
				continent = gensokyo_continent
			}
			NOT = { has_country_flag = th_participates_royal_fairy_challenge }
			NOT = { has_country_flag = th_rfc_baka_for_diplomacy_of_@ROOT }
			NOT = { has_country_flag = th_rfc_baka_for_warfare_of_@ROOT }
			NOT = { has_country_flag = th_rfc_baka_for_royalty_of_@ROOT }
		}
		set_country_flag = th_rfc_baka_for_duel_of_@ROOT
		#Reset Danmaku Flags so the fairy can immediately challenge
		clr_country_flag = th_was_already_danmaku_challenged_by_@ROOT
		clr_country_flag = th_danmaku_duel_lost_against_@FROM
	}
	random_country = {
		limit = {
			capital_scope = {
				continent = gensokyo_continent
			}
			NOT = { has_country_flag = th_participates_royal_fairy_challenge }
			NOT = { has_country_flag = th_rfc_baka_for_diplomacy_of_@ROOT }
			NOT = { has_country_flag = th_rfc_baka_for_warfare_of_@ROOT }
			NOT = { has_country_flag = th_rfc_baka_for_royalty_of_@ROOT }
			NOT = { has_country_flag = th_rfc_baka_for_duel_of_@ROOT }
		}
		set_country_flag = th_rfc_baka_for_pranks_of_@ROOT
		#Reset Prank flags
		clr_country_flag = th_was_pranked_by_@ROOT
	}
}

th_rfc_show_the_bakas = {
	random_country = {
		limit = {
			has_country_flag = th_rfc_baka_for_diplomacy_of_@ROOT
		}
		custom_tooltip = th_rfc_is_baka_for_diplomacy_challenge
	}
	random_country = {
		limit = {
			has_country_flag = th_rfc_baka_for_warfare_of_@ROOT
		}
		custom_tooltip = th_rfc_is_baka_for_warfare_challenge
	}
	random_country = {
		limit = {
			has_country_flag = th_rfc_baka_for_royalty_of_@ROOT
		}
		custom_tooltip = th_rfc_is_baka_for_royalty_challenge
	}
	random_country = {
		limit = {
			has_country_flag = th_rfc_baka_for_duel_of_@ROOT
		}
		custom_tooltip = th_rfc_is_baka_for_duel_challenge
	}
	random_country = {
		limit = {
			has_country_flag = th_rfc_baka_for_pranks_of_@ROOT
		}
		custom_tooltip = th_rfc_is_baka_for_pranks_challenge
	}
}

th_rfc_show_the_scores = {
	custom_tooltip = th_rfc_own_score_tt
	custom_tooltip = th_rfc_gets_scores_from_other_participants_tt
	hidden_effect = {
		every_country = {
			limit = {
				has_country_flag = th_participates_royal_fairy_challenge
				NOT = { tag = ROOT }
			}
			country_event = {
				id = rfc_events.13
			}
		}
	}
}

th_rfc_clean_the_bakas = {
	every_country = {
		limit = {
			OR = {
				has_country_flag = th_rfc_baka_for_diplomacy_of_@ROOT
				has_country_flag = th_rfc_baka_for_warfare_of_@ROOT
				has_country_flag = th_rfc_baka_for_royalty_of_@ROOT
				has_country_flag = th_rfc_baka_for_duel_of_@ROOT
				has_country_flag = th_rfc_baka_for_pranks_of_@ROOT
			}
		}
		clr_country_flag = th_rfc_baka_for_diplomacy_of_@ROOT
		clr_country_flag = th_rfc_baka_for_warfare_of_@ROOT
		clr_country_flag = th_rfc_baka_for_royalty_of_@ROOT
		clr_country_flag = th_rfc_baka_for_duel_of_@ROOT
		clr_country_flag = th_rfc_baka_for_pranks_of_@ROOT
	}
}

th_rfc_absolve_a_challenge = {
	every_country = {
		limit = {
			has_country_flag = th_rfc_baka_for_$type$_of_@ROOT
		}
		clr_country_flag = th_rfc_baka_for_$type$_of_@ROOT
	}
	change_variable = {
		which = th_royal_fairy_challenge_points
		value = $value$
	}
	change_variable = {
		which = th_rfc_own_high_score
		value = $value$
	}	
}